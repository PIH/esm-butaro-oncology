name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "18.x"
      - run: yarn
      - run: yarn lint
      - run: yarn coverage
      - run: yarn typescript
      - run: yarn build
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            dist

  pre_release_patient_status:
    runs-on: ubuntu-latest

    needs: build

    if: ${{ github.event_name == 'push' }}

    steps:
      - uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"
      - run: yarn
      - run: yarn turbo run build
      - run: yarn lerna version patch --no-git-tag-version --no-push --yes
      - run: yarn lerna version "$(node -e "console.log(require('./lerna.json').version)")-pre.${{ github.run_number }}" --no-git-tag-version --yes
      - run: git config user.email "imb-ci@pih.org" && git config user.name "IMB CI"
      - run: git add . && git commit -m "Prerelease version" --no-verify
      - run: yarn run ci:prepublish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

  release:
    runs-on: ubuntu-latest

    needs: build

    if: ${{ github.event_name == 'release' }}

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: "https://registry.npmjs.org"
      - run: yarn
      - run: yarn turbo run build
      - run: yarn run ci:publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
